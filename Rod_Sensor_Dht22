// Rod sensor is connect with Pin 5 of ESP12E using 1k Ohm Resistance
// Dht22 is connected with pin 4

#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiUdp.h>
#include <NTPClient.h>
#include <ArduinoJson.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include "time.h"
#include <OneWire.h>
#include <DallasTemperature.h>
int watertemp();
String Time ();
#define ONE_WIRE_BUS 5
OneWire oneWire(ONE_WIRE_BUS);
// Pass our oneWire reference to Dallas Temperature.
DallasTemperature sensors(&oneWire);
String currentDate;
const char* ssid = "Lifetrust_Office";
const char* password = "Lifetrust@123";

const char* serverName = "http://app.antzsystems.com/api/v1/iot/enclosure/metric/update"; // Use HTTP (insecure)

const int DHT_PIN = 4; // Define the GPIO pin connected to the DHT22 sensor
const int vcc = 13;

const char* ntpServer = "pool.ntp.org";
const long gmtOffset_sec = 0;
const int daylightOffset_sec = 19800;

WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, ntpServer);

DHT dht(DHT_PIN, DHT22);

//WiFiUDP ntpUDP;
//NTPClient timeClient(ntpUDP, "pool.ntp.org");

//Week Days
String weekDays[7]={"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};

//Month names
String months[12]={"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};



void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  Serial.println("Connecting");
  pinMode(vcc, OUTPUT);
  digitalWrite(vcc, LOW);

  // Initialize a NTPClient to get time
  timeClient.begin();
  // Set offset time in seconds to adjust for your timezone, for example:
  // GMT +1 = 3600
  // GMT +8 = 28800
  // GMT -1 = -3600
  // GMT 0 = 0
  timeClient.setTimeOffset(0);

  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.print("Connected to WiFi network with IP Address: ");
  Serial.println(WiFi.localIP());
  Serial.println("Timer set to 1 minute (timerDelay variable), entering deep sleep...");

  dht.begin();

  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
  timeClient.setTimeOffset(19800); // Set the time zone offset in seconds (19800 seconds = +5:30 GMT for India)



    if (WiFi.status() == WL_CONNECTED) {

     Time ();
     Serial.println("Time" + String(currentDate));
    // Fetch NTP time
    Serial.println("Fetching NTP time...");
    timeClient.update(); // Fetch the time from the NTP server

    // Your Domain name with URL path
    Serial.println("Server URL: " + String(serverName));

    // Read DHT22 sensor data
    float temperature = dht.readTemperature(); // Temperature in Celsius
    float humidity = dht.readHumidity();       // Relative humidity

     sensors.requestTemperatures(); // Send the command to get temperatures
     Serial.println(sensors.getTempCByIndex(0));



    // Create JSON data
    DynamicJsonDocument jsonDoc(512);
    JsonObject root = jsonDoc.to<JsonObject>();
    root["enclosure_id"] = 160;

    JsonArray values = root.createNestedArray("values");

    JsonObject temperatureObj = values.createNestedObject();
    temperatureObj["key"] = "Temperature";
    temperatureObj["value"] = temperature;
    temperatureObj["uom"] = "celsius";
    temperatureObj["event_date"] = currentDate;

    JsonObject humidityObj = values.createNestedObject();
    humidityObj["key"] = "Humidity";
    humidityObj["value"] = humidity;
    humidityObj["uom"] = "percent";
    humidityObj["event_date"] = currentDate;


    JsonObject watertemp = values.createNestedObject();
    watertemp["key"] = "Water_Temp";
    watertemp["value"] = sensors.getTempCByIndex(0);
    watertemp["uom"] = "Celcius";
    watertemp["event_date"] =currentDate;

    String jsonString;
    serializeJson(root, jsonString);
    Serial.println("JSON Data: " + jsonString);

    HTTPClient http;
    WiFiClient client;

    http.begin(client, serverName);
    http.addHeader("Content-Type", "application/json");
    int httpResponseCode = http.POST(jsonString);
    http.end();

    // Enter deep sleep for 1 minute
    ESP.deepSleep(30e6); // 60e6 microseconds = 1 minute
  } else {
    Serial.println("WiFi Disconnected");
  }
}

void loop() {

}






String Time ()

{

    timeClient.update();

  time_t epochTime = timeClient.getEpochTime();

  
  String formattedTime = timeClient.getFormattedTime();
  

  int currentHour = timeClient.getHours();


  int currentMinute = timeClient.getMinutes();

   
  int currentSecond = timeClient.getSeconds();


  String weekDay = weekDays[timeClient.getDay()];
    

  //Get a time structure
  struct tm *ptm = gmtime ((time_t *)&epochTime); 

  int monthDay = ptm->tm_mday;


  int currentMonth = ptm->tm_mon+1;


  String currentMonthName = months[currentMonth-1];


  int currentYear = ptm->tm_year+1900;


  currentDate = String(currentYear) + ":" + String(currentMonth) + ":" + String(monthDay) + ":"+ String(currentHour) + ":" + String(currentMinute) + ":" + String(currentSecond);
  //Serial.print("Current date: ");
  //Serial.println(currentDate);


return currentDate;
  
  }
