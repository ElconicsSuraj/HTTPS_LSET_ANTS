#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiUdp.h>
#include <NTPClient.h>
#include <ArduinoJson.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>

const char* ssid = "Lifetrust_Office";
const char* password = "Lifetrust@123";

const char* serverName = "http://app.antzsystems.com/api/v1/iot/enclosure/metric/update"; // Use HTTP (insecure)

const int DHT_PIN = 4; // Define the GPIO pin connected to the DHT22 sensor
const int vcc = 13;
unsigned long lastTime = 0;
unsigned long timerDelay = 30; // 1 minute deep sleep

WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org"); // You can change the NTP server as needed

DHT dht(DHT_PIN, DHT22);

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  Serial.println("Connecting");
  pinMode(vcc,OUTPUT);
  digitalWrite(vcc,LOW);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.print("Connected to WiFi network with IP Address: ");
  Serial.println(WiFi.localIP());
  Serial.println("Timer set to 1 minute (timerDelay variable), entering deep sleep...");

  dht.begin();

  timeClient.begin();
  timeClient.setTimeOffset(19800); // Set the time zone offset in seconds (19800 seconds = +5:30 GMT for India)

  if ((millis() - lastTime) > timerDelay) {
    if (WiFi.status() == WL_CONNECTED) {
      Serial.println("Fetching NTP time...");
      timeClient.update(); // Fetch the time from the NTP server

      // Your Domain name with URL path
      Serial.println("Server URL: " + String(serverName));

      // Specify content-type header as application/json
      HTTPClient http;
      WiFiClient client;

      http.begin(client, serverName);

      // Read DHT22 sensor data
      float temperature = dht.readTemperature(); // Temperature in Celsius
      float humidity = dht.readHumidity();       // Relative humidity

      // Create JSON data
      DynamicJsonDocument jsonDoc(512);
      JsonObject root = jsonDoc.to<JsonObject>();
      root["enclosure_id"] = 123;

      JsonArray values = root.createNestedArray("values");

      JsonObject temperatureObj = values.createNestedObject();
      temperatureObj["key"] = "Temperature";
      temperatureObj["value"] = temperature;
      temperatureObj["uom"] = "celsius";
      temperatureObj["event_date"] = timeClient.getFormattedTime();

      JsonObject humidityObj = values.createNestedObject();
      humidityObj["key"] = "Humidity";
      humidityObj["value"] = humidity;
      humidityObj["uom"] = "percent";
      humidityObj["event_date"] = timeClient.getFormattedTime();

      String jsonString;
      serializeJson(root, jsonString);
      Serial.println("JSON Data: " + jsonString);

      http.addHeader("Content-Type", "application/json");
      int httpResponseCode = http.POST(jsonString);

      // Free resources
      http.end();

      // Enter deep sleep for 1 minute
      ESP.deepSleep(900e6, WAKE_RF_DEFAULT);
    } else {
      Serial.println("WiFi Disconnected");
    }
  }
}

void loop() {

}
